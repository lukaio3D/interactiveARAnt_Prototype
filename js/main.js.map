{"version":3,"file":"js/main.js","mappings":"uBAAIA,E,mDCIG,MAAMC,EAAb,cACI,KAAAC,YAAcC,MACVC,EACAC,KAGA,MAAMC,EAAQ,IAAI,MAAMF,GACxB,IAAIG,EAAS,IAAI,MAAW,UAAW,IAAI,MAAQ,EAAG,GAAI,IAAKD,GAe/D,OAdAC,EAAOC,UAAU,MAAQC,QACzBF,EAAOG,cAAcL,GAAQ,GACjB,IAAI,MAAiB,SAAU,IAAI,MAAQ,EAAG,EAAG,GAAIC,GAC3DK,UAAY,GACL,MAAYC,aAAa,UAAW,CAAEC,SAAU,GAAIC,SAAU,GAAKR,GACzES,SAASC,EAAI,EAERV,EAAMW,iCAGDX,EAAMY,+BAA+B,CAAC,GAIhDZ,CAAK,CAEpB,ECvB2BH,WACvB,MAAMgB,ECYC,IAAIlB,EDXLmB,EACFC,SAASC,OAAOC,MAAM,WAAW,IAAIA,MAAM,KAAK,IAAM,cAEpDC,QAAQC,IAAIN,EAAkBO,UAAY,IAEhD,MAAMrB,EAASsB,SAASC,eAAe,gBAEvC,IAAIxB,EACJ,GAAmB,WAAfgB,EAEA,SAD8B,IAAaS,iBACtB,OAEX,uCACN,MAAMC,EAAS1B,EAAS,IAAI,IAAaC,EAAQ,CAC7C0B,oBAAoB,EACpBC,WAAW,UAETF,EAAOG,YACb7B,EAAS0B,CACb,MACI1B,EAAS,IAAI,IAAOC,GAAQ,QAGhCD,EAAS,IAAI,IAAOC,GAAQ,GAIhC,MAAMC,QAAca,EAAkBjB,YAAYE,EAAQC,GAGzD6B,OAAe5B,MAAQA,EAGxBF,EAAO+B,eAAc,WACjB7B,EAAM8B,QACV,IAGAF,OAAOG,iBAAiB,UAAU,WAC9BjC,EAAOkC,QACX,GAAE,EAGNC,GAAcC,MAAK,Q,GEjDfC,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaE,QAGrB,IAAIC,EAASN,EAAyBE,GAAY,CAGjDG,QAAS,CAAC,GAOX,OAHAE,EAAoBL,GAAUI,EAAQA,EAAOD,QAASJ,GAG/CK,EAAOD,OACf,CAGAJ,EAAoBO,EAAID,EJzBpBhD,EAAW,GACf0C,EAAoBQ,EAAI,CAACC,EAAQC,EAAUC,EAAIC,KAC9C,IAAGF,EAAH,CAMA,IAAIG,EAAeC,IACnB,IAASC,EAAI,EAAGA,EAAIzD,EAAS0D,OAAQD,IAAK,CAGzC,IAFA,IAAKL,EAAUC,EAAIC,GAAYtD,EAASyD,GACpCE,GAAY,EACPC,EAAI,EAAGA,EAAIR,EAASM,OAAQE,MACpB,EAAXN,GAAsBC,GAAgBD,IAAaO,OAAOC,KAAKpB,EAAoBQ,GAAGa,OAAOC,GAAStB,EAAoBQ,EAAEc,GAAKZ,EAASQ,MAC9IR,EAASa,OAAOL,IAAK,IAErBD,GAAY,EACTL,EAAWC,IAAcA,EAAeD,IAG7C,GAAGK,EAAW,CACb3D,EAASiE,OAAOR,IAAK,GACrB,IAAIS,EAAIb,SACER,IAANqB,IAAiBf,EAASe,EAC/B,CACD,CACA,OAAOf,CAnBP,CAJCG,EAAWA,GAAY,EACvB,IAAI,IAAIG,EAAIzD,EAAS0D,OAAQD,EAAI,GAAKzD,EAASyD,EAAI,GAAG,GAAKH,EAAUG,IAAKzD,EAASyD,GAAKzD,EAASyD,EAAI,GACrGzD,EAASyD,GAAK,CAACL,EAAUC,EAAIC,EAqBjB,EKzBdZ,EAAoByB,EAAI,CAACrB,EAASsB,KACjC,IAAI,IAAIJ,KAAOI,EACX1B,EAAoB2B,EAAED,EAAYJ,KAAStB,EAAoB2B,EAAEvB,EAASkB,IAC5EH,OAAOS,eAAexB,EAASkB,EAAK,CAAEO,YAAY,EAAMC,IAAKJ,EAAWJ,IAE1E,ECNDtB,EAAoB2B,EAAI,CAACI,EAAKC,IAAUb,OAAOc,UAAUC,eAAeC,KAAKJ,EAAKC,GCClFhC,EAAoBwB,EAAKpB,IACH,oBAAXgC,QAA0BA,OAAOC,aAC1ClB,OAAOS,eAAexB,EAASgC,OAAOC,YAAa,CAAEC,MAAO,WAE7DnB,OAAOS,eAAexB,EAAS,aAAc,CAAEkC,OAAO,GAAO,E,MCA9D,IAAIC,EAAkB,CACrB,IAAK,GAaNvC,EAAoBQ,EAAEU,EAAKsB,GAA0C,IAA7BD,EAAgBC,GAGxD,IAAIC,EAAuB,CAACC,EAA4BC,KACvD,IAGI1C,EAAUuC,GAHT9B,EAAUkC,EAAaC,GAAWF,EAGhB5B,EAAI,EAC3B,GAAGL,EAASoC,MAAMC,GAAgC,IAAxBR,EAAgBQ,KAAa,CACtD,IAAI9C,KAAY2C,EACZ5C,EAAoB2B,EAAEiB,EAAa3C,KACrCD,EAAoBO,EAAEN,GAAY2C,EAAY3C,IAGhD,GAAG4C,EAAS,IAAIpC,EAASoC,EAAQ7C,EAClC,CAEA,IADG0C,GAA4BA,EAA2BC,GACrD5B,EAAIL,EAASM,OAAQD,IACzByB,EAAU9B,EAASK,GAChBf,EAAoB2B,EAAEY,EAAiBC,IAAYD,EAAgBC,IACrED,EAAgBC,GAAS,KAE1BD,EAAgBC,GAAW,EAE5B,OAAOxC,EAAoBQ,EAAEC,EAAO,EAGjCuC,EAAqBC,KAAwD,kDAAIA,KAAwD,mDAAK,GAClJD,EAAmBE,QAAQT,EAAqBU,KAAK,KAAM,IAC3DH,EAAmBI,KAAOX,EAAqBU,KAAK,KAAMH,EAAmBI,KAAKD,KAAKH,G,KC7CvF,IAAIK,EAAsBrD,EAAoBQ,OAAEL,EAAW,CAAC,GAAG,IAAI,IAAI,MAAM,IAAOH,EAAoB,QACxGqD,EAAsBrD,EAAoBQ,EAAE6C,E","sources":["webpack://babylonjs-typescript-webpack-template/webpack/runtime/chunk loaded","webpack://babylonjs-typescript-webpack-template/./src/scenes/simpleARScene.ts","webpack://babylonjs-typescript-webpack-template/./src/index.ts","webpack://babylonjs-typescript-webpack-template/./src/createScene.ts","webpack://babylonjs-typescript-webpack-template/webpack/bootstrap","webpack://babylonjs-typescript-webpack-template/webpack/runtime/define property getters","webpack://babylonjs-typescript-webpack-template/webpack/runtime/hasOwnProperty shorthand","webpack://babylonjs-typescript-webpack-template/webpack/runtime/make namespace object","webpack://babylonjs-typescript-webpack-template/webpack/runtime/jsonp chunk loading","webpack://babylonjs-typescript-webpack-template/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","import { Scene, FreeCamera, Vector3, HemisphericLight, MeshBuilder } from '@babylonjs/core';\nimport { CreateSceneClass } from \"../createScene\";\nimport { AbstractEngine } from \"@babylonjs/core/Engines/abstractEngine\";\n\nexport class SimpleARScene implements CreateSceneClass {\n    createScene = async (\n        engine: AbstractEngine,\n        canvas: HTMLCanvasElement\n    ): Promise<Scene> => {\n        // This creates a basic Babylon Scene object (non-mesh)\n        const scene = new Scene(engine);\n        var camera = new FreeCamera(\"camera1\", new Vector3(0, 5, -10), scene);\n        camera.setTarget(Vector3.Zero());\n        camera.attachControl(canvas, true);\n        var light = new HemisphericLight(\"light1\", new Vector3(0, 1, 0), scene);\n        light.intensity = 0.7;\n        var sphere = MeshBuilder.CreateSphere(\"sphere1\", { segments: 16, diameter: 2 }, scene);\n        sphere.position.y = 1;\n\n        const env = scene.createDefaultEnvironment();\n\n        // here we add XR support\n        const xr = await scene.createDefaultXRExperienceAsync({\n\n        });\n\n        return scene;\n    };\n}","import { Engine } from \"@babylonjs/core/Engines/engine\";\nimport { WebGPUEngine } from \"@babylonjs/core/Engines/webgpuEngine\";\nimport { getSceneModule } from \"./createScene\";\nimport { AbstractEngine } from \"@babylonjs/core/Engines/abstractEngine\";\n\nexport const babylonInit = async (): Promise<void> => {\n    const createSceneModule = getSceneModule();\n    const engineType =\n        location.search.split(\"engine=\")[1]?.split(\"&\")[0] || \"webgl\";\n    // Execute the pretasks, if defined\n    await Promise.all(createSceneModule.preTasks || []);\n    // Get the canvas element\n    const canvas = document.getElementById(\"renderCanvas\") as HTMLCanvasElement;\n    // Generate the BABYLON 3D engine\n    let engine: AbstractEngine;\n    if (engineType === \"webgpu\") {\n        const webGPUSupported = await WebGPUEngine.IsSupportedAsync;\n        if (webGPUSupported) {\n            // You can decide which WebGPU extensions to load when creating the engine. I am loading all of them\n            await import(\"@babylonjs/core/Engines/WebGPU/Extensions/\");\n            const webgpu = engine = new WebGPUEngine(canvas, {\n                adaptToDeviceRatio: true,\n                antialias: true,\n            });\n            await webgpu.initAsync();\n            engine = webgpu;\n        } else {\n            engine = new Engine(canvas, true);\n        }\n    } else {\n        engine = new Engine(canvas, true);\n    }\n\n    // Create the scene\n    const scene = await createSceneModule.createScene(engine, canvas);\n\n    // JUST FOR TESTING. Not needed for anything else\n    (window as any).scene = scene;\n\n    // Register a render loop to repeatedly render the scene\n    engine.runRenderLoop(function () {\n        scene.render();\n    });\n\n    // Watch for browser/canvas resize events\n    window.addEventListener(\"resize\", function () {\n        engine.resize();\n    });\n};\n\nbabylonInit().then(() => {\n    // scene started rendering, everything is initialized\n});\n","import type { Scene } from \"@babylonjs/core/scene\";\n\n// Change this import to check other scenes\nimport { DefaultSceneWithTexture } from \"./scenes/defaultWithTexture\";\nimport { AbstractEngine } from \"@babylonjs/core/Engines/abstractEngine\";\nimport { SimpleARScene } from \"./scenes/simpleARScene\";\nimport { PhysicsSceneWithHavok } from \"./scenes/physicsWithHavok\";\n\nexport interface CreateSceneClass {\n    createScene: (engine: AbstractEngine, canvas: HTMLCanvasElement) => Promise<Scene>;\n    preTasks?: Promise<unknown>[];\n}\n\nexport interface CreateSceneModule {\n    default: CreateSceneClass;\n}\n\nexport const getSceneModule = (): CreateSceneClass => {\n    return new SimpleARScene();\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkbabylonjs_typescript_webpack_template\"] = self[\"webpackChunkbabylonjs_typescript_webpack_template\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [91,678,402,454], () => (__webpack_require__(6276)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","SimpleARScene","createScene","async","engine","canvas","scene","camera","setTarget","Zero","attachControl","intensity","CreateSphere","segments","diameter","position","y","createDefaultEnvironment","createDefaultXRExperienceAsync","createSceneModule","engineType","location","search","split","Promise","all","preTasks","document","getElementById","IsSupportedAsync","webgpu","adaptToDeviceRatio","antialias","initAsync","window","runRenderLoop","render","addEventListener","resize","babylonInit","then","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","length","fulfilled","j","Object","keys","every","key","splice","r","d","definition","o","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","data","moreModules","runtime","some","id","chunkLoadingGlobal","self","forEach","bind","push","__webpack_exports__"],"sourceRoot":""}